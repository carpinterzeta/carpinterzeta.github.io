@tailwind base;
@tailwind components;
@tailwind utilities;


@font-face {
	font-family: "SFProRounded";
	src: url("../assets/fonts/SF-Pro-Rounded-Regular.latin.base.ttf") format("truetype");
	font-weight: 400;
	font-style: normal;
	/* font-display: swap; */
}

@font-face {
	font-family: "SFProRounded";
	src: url("../assets/fonts/SF-Pro-Rounded-Medium.latin.base.ttf") format("truetype");
	font-weight: 500;
	font-style: normal;
	/* font-display: swap; */
}

@font-face {
	font-family: "SFProRounded";
	src: url("../assets/fonts/SF-Pro-Rounded-Semibold.latin.base.ttf") format("truetype");
	font-weight: 600;
	font-style: normal;
	/* font-display: swap; */
}

@font-face {
	font-family: "SFProRounded";
	src: url("../assets/fonts/SF-Pro-Rounded-Bold.latin.base.ttf") format("truetype");
	font-weight: 700;
	font-style: normal;
	/* font-display: swap; */
}

@font-face {
	font-family: "SFProRounded";
	src: url("../assets/fonts/SF-Pro-Rounded-Regular.latin.extend.ttf") format("truetype");
	font-weight: 400;
	font-style: normal;
	/* font-display: swap; */
}

@font-face {
	font-family: "SFProRounded";
	src: url("../assets/fonts/SF-Pro-Rounded-Medium.latin.extend.ttf") format("truetype");
	font-weight: 500;
	font-style: normal;
	/* font-display: swap; */
}

@font-face {
	font-family: "SFProRounded";
	src: url("../assets/fonts/SF-Pro-Rounded-Semibold.latin.extend.ttf") format("truetype");
	font-weight: 600;
	font-style: normal;
	/* font-display: swap; */
}

@font-face {
	font-family: "SFProRounded";
	src: url("../assets/fonts/SF-Pro-Rounded-Bold.latin.extend.ttf") format("truetype");
	font-weight: 700;
	font-style: normal;
	/* font-display: swap; */
}

@font-face {
	font-family: "CascadiaCode";
	src: url("../assets/fonts/CascadiaCode.ttf") format("truetype");
	font-weight: 400;
	font-style: normal;
	font-display: swap;
}

@layer base {
	:root,
	:root[data-theme="light"] {
		color-scheme: light;

		/* For text to have the shade of the background --fg-hue: var(--hue) and --bg-hue: var(--hue) */
		/* For text to have the shade of the background --fg-saturation: var(--saturation) and --bg-saturation: var(--saturation) */
		
		/*** MAIN COLORS (Base, background, accents, text) ***/
		/* Base theme color shade */
		--hue: 200deg; /* General base color shade of theme elements */
		--saturation: 10%; /* General base saturation of theme elements, 0% - no color shade */
		
		/* Background */
		--bg-hue: var(--hue); /* Background color shade */
		--bg-saturation: var(--saturation); /* Background shade saturation and some other elements, 0% - no shade */
		--bg-brightness: 96%; /* Background brightness, 100% - pure white */

		/* Accents */
		--theme-accent-base: var(--bg-hue) 53% 27%; /* Main accent color */
		--theme-accent-one: var(--bg-hue) 53% 27%; /* First additional accent color */
		--theme-accent-two: 351deg 66% 48%; /* Second additional accent color */
		
		/* Option */ /* --theme-accent-two: 344deg 63% 45%; */
		
		/* Text (foreground, text brightness color is calculated below based on --theme-fg) */
		--fg-hue: var(--hue); /* General color shade for calculating color gradations */
		--fg-saturation: var(--saturation); /* General saturation for calculating shaded color gradations, 0% - no shade */
		--fg-brightness: 9%; /* Brightness for calculating shaded color gradations, 0% - pure black */
		--theme-text: var(--theme-color-500); /* Text brightness color already adapted to background color */ 

		/*** SECONDARY COLORS (External links, neutral accent, quotes) ***/
		--theme-link: var(--hue) 97% 31%; /* Color for external links */
		--theme-accent: var(--theme-color-600); /* Neutral accent, calculated below based on --theme-fg */
		--theme-quote: var(--theme-text); /* Quote color */
		
		/*** ADDITIONAL COLORS ***/
		--theme-lightest: var(--theme-color-350);
		--theme-lighter: var(--theme-color-400);
		--theme-light: var(--theme-color-450);
		
		/*** SPECIAL COLORS FOR EACH THEME ***/
		--theme-special-lightest: hsl(var(--hue), var(--saturation), 100%);
		--theme-special-lighter: hsl(var(--hue), var(--saturation), 98%);
		--theme-special-light: hsl(var(--theme-bg));
		--theme-special: var(--theme-color-75);
		
		/* Syntax highlighting rehype-pretty-code */
		pre code span {
			color: var(--shiki-light) !important;
			font-style: var(--shiki-light-font-style) !important;
			font-weight: var(--shiki-light-font-weight) !important;
			text-decoration: var(--shiki-light-text-decoration) !important;
		}
	}

	:root[data-theme="dark"] {
		color-scheme: dark;

		/* For text to have the shade of the background --fg-hue: var(--hue) and --bg-hue: var(--hue) */
		/* For text to have the shade of the background --fg-saturation: var(--saturation) and --bg-saturation: var(--saturation) */
		
		/* --theme-bg: 200deg 93% 10%; /* DeepBlue */
		/* --theme-bg: 190deg 86% 8%; /* DeepGreen */
		/* --theme-bg: 237deg 22% 20%; */
		/* --theme-accent-one: 355deg 61% 88%; /* LightRose */
		/* --theme-accent-two: 200deg 61% 71%; /* LightBlue */

		/*** MAIN COLORS (Base, background, accents, text) ***/
		/* Base theme color shade */
		--hue: 200deg; /* General base color shade of theme elements */
		--saturation: 3%; /* General base saturation of theme elements, 0% - no color shade */

		/* Background */
		--bg-hue: var(--hue); /* Background color shade */
		--bg-saturation: var(--saturation); /* Background shade saturation and some other elements, 0% - no shade */
		--bg-brightness: 15%; /* Background brightness, 0% - black */
		/* Option 204deg 51% 14% */
		/* Option 210deg 25% 15% */

		/* Accents */
		--theme-accent-base: var(--hue) 10% 85%; 
		--theme-accent-one: 3000deg 100% 80%; /* First additional accent color */
		--theme-accent-two: 3000deg 72% 63%; /* Second additional accent color (was 45deg 80% 50%) */
		/* --theme-accent-two: 0deg 75% 89%; */
		/* --theme-accent-base: var(--hue) 97% 71%; */

		/* Text (foreground, text brightness color is calculated below based on --theme-fg) */
		--fg-hue: var(--hue); /* General color shade for calculating color gradations */
		--fg-saturation: var(--saturation); /* General saturation for calculating shaded color gradations, 0% - no shade */
		--fg-brightness: 98%; /* Brightness for calculating shaded color gradations, 100% - pure white */
		--theme-text: var(--theme-color-500); /* Text brightness color adapted to background color */ 

		/*** SECONDARY COLORS (External links, neutral accent, quotes) ***/
		--theme-link: var(--hue) 61% 71%; /* Color for external links */
		--theme-accent: var(--theme-color-600); /* Neutral accent relative to text */
		--theme-quote: var(--theme-text); /* Quote color */

		/*** ADDITIONAL COLORS ***/
		--theme-lightest: var(--theme-color-350);
		--theme-lighter: var(--theme-color-400);
		--theme-light: var(--theme-color-450);

		/*** SPECIAL COLORS FOR EACH THEME (!different settings for different themes) ***/
		--theme-special-lightest: var(--theme-color-250);
		--theme-special-lighter: var(--theme-color-200);
		--theme-special-light: var(--theme-color-150);
		--theme-special: hsl(var(--hue) var(--saturation) 0% / 0.150);

		/* Syntax highlighting */
		pre code span {
			color: var(--shiki-dark) !important;
			font-style: var(--shiki-dark-font-style) !important;
			font-weight: var(--shiki-dark-font-weight) !important;
			text-decoration: var(--shiki-dark-text-decoration) !important;
		}
	}

	/* Common variables */
	:root {
		--theme-bg: var(--bg-hue) var(--bg-saturation) var(--bg-brightness); /* Background color */
		--theme-fg: var(--fg-hue) var(--fg-saturation) var(--fg-brightness); /* Base color for calculating color gradations */

		/* Gradations of the base color for text and elements */
		--theme-color-900: hsl(var(--theme-fg) / 1.0000);
		--theme-color-850: hsl(var(--theme-fg) / 0.9675);
		--theme-color-800: hsl(var(--theme-fg) / 0.935);
		--theme-color-750: hsl(var(--theme-fg) / 0.880);
		--theme-color-700: hsl(var(--theme-fg) / 0.825);
		--theme-color-650: hsl(var(--theme-fg) / 0.785);
		--theme-color-600: hsl(var(--theme-fg) / 0.745);
		--theme-color-550: hsl(var(--theme-fg) / 0.675);
		--theme-color-500: hsl(var(--theme-fg) / 0.605);
		--theme-color-450: hsl(var(--theme-fg) / 0.500);
		--theme-color-400: hsl(var(--theme-fg) / 0.395);
		--theme-color-350: hsl(var(--theme-fg) / 0.290);
		--theme-color-300: hsl(var(--theme-fg) / 0.185);
		--theme-color-250: hsl(var(--theme-fg) / 0.150);
		--theme-color-200: hsl(var(--theme-fg) / 0.115);
		--theme-color-150: hsl(var(--theme-fg) / 0.080);
		--theme-color-100: hsl(var(--theme-fg) / 0.045);
		--theme-color-75: hsl(var(--theme-fg) / 0.03375);
		--theme-color-50: hsl(var(--theme-fg) / 0.0225);

		/* Variables for code block highlighting rehype-pretty-code */
		--code-inline-bg: var(--theme-color-150);
		--code-bg: var(--theme-special);
		--code-title-bg: var(--theme-color-200);
		--code-line-highlight: var(--theme-color-150);
		--code-line-diff-add: rgba(72, 191, 145, 0.15);
		--code-line-diff-remove: rgba(248, 85, 82, 0.15);
	}

	html {
		letter-spacing: 0.025em;
	}

	h1 {
		@apply text-2xl md:pt-[0.0rem] !important;
	}
	h2 {
		@apply text-xl md:pt-[0.215rem] !important;
	}
	h3 {
		@apply text-lg md:pt-[0.250rem] !important; /* was 0.260 check!!! */
	}
	h4 {
		@apply text-base md:pt-[0.425rem] !important;
	}
	h5 {
		@apply text-base md:pt-[0.425rem] !important;
	}
	h6 {
		@apply text-base md:pt-[0.425rem] !important;
	}
	
	h1, h2, h3, h4, h5, h6 {
		@apply min-h-8 h-auto !important;
	}

	/* Needed for copy code button when rehype-pretty-code is disabled */
	/*
	pre {
		@apply relative;
	}
	*/
}

:root {
	/* Style for code blocks rehype-pretty-code */
	figure[data-rehype-pretty-code-figure] {
		@apply relative m-0 rounded-lg overflow-auto;

		figcaption {
			@apply m-0;
		}

		/* Style for titles inside code blocks */
		[data-rehype-pretty-code-title] {
			@apply break-words bg-[var(--code-title-bg)] border-b border-bgColor text-textColor px-4 flex items-center text-sm h-10;

			& + pre {
				@apply m-0 rounded-t-none; /* Remove top margin if there is a title */
				}
		}

		/* Style for code blocks */
		pre {
			@apply m-0 static px-0 py-2 max-h-[612px] text-sm;

			/* Style for code content */
			> code {
				counter-reset: line;

				/* For blocks with line numbers */
				&[data-line-numbers] {
					> [data-line]::before {
						counter-increment: line;
						content: counter(line);
						@apply mr-4 inline-block w-4 text-right text-lightest;
					}
				}

				/* For each line inside the code block */
				> [data-line] {
					@apply px-4 h-6 bg-transparent flex items-center;
				}

				/* For highlighted lines */
				[data-highlighted-line] {
					background-color: var(--code-line-highlight);
				}

				[data-highlighted-line-id="add"] {
					background-color: var(--code-line-diff-add);
				}

				[data-highlighted-line-id="remove"] {
					background-color: var(--code-line-diff-remove);
				}

				/* For highlighted characters */
				[data-highlighted-chars] > span {
					@apply py-[4px];
				}

				/* For line differences (implemented above) */
				/*
				.diff {
					&.add {
						background-color: var(--code-line-diff-add);
					}
					&.remove {
						background-color: var(--code-line-diff-remove);
					}
				}
				*/
			}
		}
	}

	/* Main style for pre block */
	pre {
		@apply bg-[var(--code-bg)] text-[var(--theme-text)] rounded-lg leading-loose m-0;
		/* @apply bg-[var(--code-bg)] text-[var(--theme-accent)] rounded-lg leading-loose m-0; */
	}

	/* Style for inline code (rehype pretty code overrides styles in tailwind.config.css) */
	:not(pre) > code {
		@apply bg-[var(--code-inline-bg)] px-2 py-1 text-sm rounded-lg;
	}

	/* Style for copy button rehype-pretty-copy (button implemented separately) */
	/*
	button.rehype-pretty-copy {
		@apply absolute top-1 right-1 bg-transparent m-auto size-8 rounded-md p-1 backdrop-blur-none;
		filter: brightness(var(--brightness)) saturate(0%);
	}
	*/
}

/* DOUBLE CHECK !!! */
@layer components {
	/* Override styles for <mark> inside article */
	article mark {
		@apply bg-transparent;
	}
}
